vector<int> gidilensatir;
vector<int> gidilensutun;

gidilensatir.erase(gidilensatir.begin() , gidilensatir.end());  //yenisatýr
gidilensutun.erase(gidilensutun.begin() , gidilensutun.end());	//yenisatýr
for (int k = 0; k < karincaAdim ; k++) {    //bu kýsma karýnca sayýsý döngüsü ve iterasyon sayýsýda eklenecek
        for(int i=karinca1.konumsatir - 1 ; i < karinca1.konumsatir +2 ; i++){
            for(int j=karinca1.konumsutun - 1 ; j < karinca1.konumsutun +2 ; j++){
		
		for(unsigned k = 0 ; k < gidilensatir.size ; i++){
		
				if(i == gidilensatir[k] && j = gidilensutun[k] ){	//yenisatýr
		
				goto cnt;
				}
		}




                if(i == karinca1.konumsatir && j == karinca1.konumsutun)
                {
                    continue;
                }
                if(karincaYonOlasilik[i][j] >= enbuyukolasilik )
                {
			
                    enbuyukolasilik = karincaYonOlasilik[i][j];
                    enbuyukolasiliksatir = i;
                    enbuyukolasiliksutun = j;
                }

            }
	cnt:; //yenisatýr
        }
        karinca1.konumsatir = enbuyukolasiliksatir ;
        karinca1.konumsutun = enbuyukolasiliksutun ;
        feromonMatrisi[karinca1.konumsatir][karinca1.konumsutun] = ((1 - ro)*karincaYonOlasilik[karinca1.konumsatir][karinca1.konumsutun]) + (ro * sezgiselmatris[karinca1.konumsatir][karinca1.konumsutun]) ;
        karincaYonOlasilik[karinca1.konumsatir][karinca1.konumsutun]= pow(feromonMatrisi[karinca1.konumsatir][karinca1.konumsutun] , alpha ) * pow(sezgiselmatris[karinca1.konumsatir][karinca1.konumsutun] , beta);
	gidilensatir.push_back(enbuyukolasiliksatir); //yenisatýr
	gidilensutun.push_back(enbuyukolasiliksutun); //yenisatýr
	enbuyukolasilik = 0;

    }